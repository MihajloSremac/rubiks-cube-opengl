#pragma once
#ifndef CUBESCRAMBLE_H
#define CUBESCRAMBLE_H

#include <string>
#include <vector>
#include <utility> 


using namespace std;

class CubeScramble {
public:
	// Constructor
	CubeScramble();
	float solvedx[48] = { 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15, 0.15, 0.15, 0.25, 0.25, 0.35, 0.35, 0.35, 0.50, 0.50, 0.50, 0.60, 0.60, 0.70, 0.70, 0.70, -0.55, -0.55, -0.55, -0.45, -0.45, -0.35, -0.35, -0.35, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.2, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1 };
	float solvedy[48] = { 0.45, 0.35, 0.25, 0.1, 0.0, -0.1, -0.25, -0.35, -0.45, 0.1, 0.0, -0.1, 0.1, -0.1, 0.1, 0.0, -0.1, 0.1, 0.0, -0.1, 0.1, -0.1, 0.1, 0.0, -0.1, 0.1, 0.0, -0.1, 0.1, -0.1, 0.1, 0.0, -0.1, 0.45, 0.35, 0.25, 0.1, 0.0, -0.1, -0.25, -0.35, -0.45, 0.45, 0.25, 0.1, -0.1, -0.25, -0.45 };
	// Method to generate a scramble
	string generateScramble(float(&xcube)[48], float(&ycube)[48]);
	void processScramble(const string& scramble, float(&xcube)[48], float(&ycube)[48]);
	void ResetCube(float(&xcube)[48], float(&ycube)[48]);
	bool isSolved(float(&xcube)[48], float(&ycube)[48], bool isTimerRunning);

	void updateValueR(float& x, float& y);
	void updateValueRPrime(float& x, float& y);
	void updateValueU(float& x, float& y);
	void updateValueUPrime(float& x, float& y);
	void updateValueD(float& x, float& y);
	void updateValueDPrime(float& x, float& y);
	void updateValueL(float& x, float& y);
	void updateValueLPrime(float& x, float& y);
	void updateValueF(float& x, float& y);
	void updateValueFPrime(float& x, float& y);
	void updateValueB(float& x, float& y);
	void updateValueBPrime(float& x, float& y);
	//NEPOMERIVI KVADRATI - CENTRI - 6 komada
	
	//R rotacija
	bool rKeyPressed = false;
	bool tKeyPressed = false;

	//U rotacija
	bool uKeyPressed = false;
	bool iKeyPressed = false;

	//L rotacija
	bool lKeyPressed = false;
	bool semiColonKeyPressed = false;

	//F rotacija
	bool fKeyPressed = false;
	bool gKeyPressed = false;

	//D rotacija
	bool dKeyPressed = false;
	bool sKeyPressed = false;

	//B rotacija
	bool bKeyPressed = false;
	bool nKeyPressed = false;

	bool backspacePressed = false;
	bool scramblePressed = false;

	float greenCenter[24] = {

		-0.225, 0.05,      0.0, 1.0, 0.0, 1.0,
		-0.225, -0.05,       0.0, 1.0, 0.0, 1.0,
		-0.125, 0.05,       0.0, 1.0, 0.0, 1.0,
		-0.125, -0.05,        0.0, 1.0, 0.0, 1.0,

	};

	float orangeCenter[24] = {
		-0.575, 0.05,       1.0, 0.5, 0.0, 1.0,
		-0.575, -0.05,       1.0, 0.5, 0.0, 1.0,
		-0.475, 0.05,	     1.0, 0.5, 0.0, 1.0,
		-0.475, -0.05,        1.0, 0.5, 0.0, 1.0,
	};

	float redCenter[24] = {
		0.125, 0.05,       1.0, 0.0, 0.0, 1.0,
		0.125, -0.05,       1.0, 0.0, 0.0, 1.0,
		0.225, 0.05,	     1.0, 0.0, 0.0, 1.0,
		0.225, -0.05,        1.0, 0.0, 0.0, 1.0,
	};

	float blueCenter[24] = {
		0.475, 0.05,       0.0, 0.0, 1.0, 1.0,
		0.475, -0.05,       0.0, 0.0, 1.0, 1.0,
		0.575, 0.05,	     0.0, 0.0, 1.0, 1.0,
		0.575, -0.05,        0.0, 0.0, 1.0, 1.0,
	};

	float whiteCenter[24] = {
		-0.225, 0.4,       1.0, 1.0, 1.0, 1.0,
		-0.225, 0.3,       1.0, 1.0, 1.0, 1.0,
		-0.125, 0.4,	     1.0, 1.0, 1.0, 1.0,
		-0.125, 0.3,        1.0, 1.0, 1.0, 1.0,
	};

	float yellowCenter[24] = {
		-0.225, -0.4,       1.0, 1.0, 0.0, 1.0,
		-0.225, -0.3,       1.0, 1.0, 0.0, 1.0,
		-0.125, -0.4,	     1.0, 1.0, 0.0, 1.0,
		-0.125, -0.3,        1.0, 1.0, 0.0, 1.0,
	};

	//POMERIVI KVADRATI
	//Svaki kvadrat je jedinstven i imace svoje neke kordinate sa xcubeBroj i ycubeBroj od 1-54
	float cubeRow11121White[24] = {
		-0.125, 0.05,       1.0, 1.0, 1.0, 1.0,
		-0.125, -0.05,       1.0, 1.0, 1.0, 1.0,
		-0.025, 0.05,	     1.0, 1.0, 1.0, 1.0,
		-0.025, -0.05,        1.0, 1.0, 1.0, 1.0,
	};

	float cubeRow11121Green[24] = {
		-0.125, 0.05,       0.0, 1.0, 0.0, 1.0,
		-0.125, -0.05,       0.0, 1.0, 0.0, 1.0,
		-0.025, 0.05,	     0.0, 1.0, 0.0, 1.0,
		-0.025, -0.05,        0.0, 1.0, 0.0, 1.0,
	};

	float cubeRow11121Yellow[24] = {
		-0.125, 0.05,       1.0, 1.0, 0.0, 1.0,
		-0.125, -0.05,       1.0, 1.0, 0.0, 1.0,
		-0.025, 0.05,	     1.0, 1.0, 0.0, 1.0,
		-0.025, -0.05,        1.0, 1.0, 0.0, 1.0,
	};

	float cubeRow234Red[24] = {
		-0.125, 0.05,       1.0, 0.0, 0.0, 1.0,
		-0.125, -0.05,       1.0, 0.0, 0.0, 1.0,
		-0.025, 0.05,	     1.0, 0.0, 0.0, 1.0,
		-0.025, -0.05,        1.0, 0.0, 0.0, 1.0,
	};

	float cubeRow567Blue[24] = {
		-0.125, 0.05,       0.0, 0.0, 1.0, 1.0,
		-0.125, -0.05,       0.0, 0.0, 1.0, 1.0,
		-0.025, 0.05,	     0.0, 0.0, 1.0, 1.0,
		-0.025, -0.05,        0.0, 0.0, 1.0, 1.0,
	};

	float cubeRow8910Orange[24] = {
		-0.125, 0.05,       1.0, 0.5, 0.0, 1.0,
		-0.125, -0.05,       1.0, 0.5, 0.0, 1.0,
		-0.025, 0.05,	     1.0, 0.5, 0.0, 1.0,
		-0.025, -0.05,        1.0, 0.5, 0.0, 1.0,
	};

	float linesVertices[576] = {
		-0.32, 0.5,       0.2, 0.2, 0.2, 1.0,
		-0.32, 0.2,       0.2, 0.2, 0.2, 1.0,
		-0.22, 0.5,       0.2, 0.2, 0.2, 1.0,
		-0.22, 0.2,       0.2, 0.2, 0.2, 1.0,
		-0.12, 0.5,       0.2, 0.2, 0.2, 1.0,
		-0.12, 0.2,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.5,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.2,       0.2, 0.2, 0.2, 1.0,

		-0.32, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.32, -0.15,       0.2, 0.2, 0.2, 1.0,
		-0.22, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.22, -0.15,       0.2, 0.2, 0.2, 1.0,
		-0.12, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.12, -0.15,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.15,       0.2, 0.2, 0.2, 1.0,

		-0.32, -0.2,       0.2, 0.2, 0.2, 1.0,
		-0.32, -0.5,       0.2, 0.2, 0.2, 1.0,
		-0.22, -0.2,       0.2, 0.2, 0.2, 1.0,
		-0.22, -0.5,       0.2, 0.2, 0.2, 1.0,
		-0.12, -0.2,       0.2, 0.2, 0.2, 1.0,
		-0.12, -0.5,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.2,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.5,       0.2, 0.2, 0.2, 1.0,

		-0.67, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.67, -0.15,       0.2, 0.2, 0.2, 1.0,
		-0.57, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.57, -0.15,       0.2, 0.2, 0.2, 1.0,
		-0.47, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.47, -0.15,       0.2, 0.2, 0.2, 1.0,
		-0.37, 0.15,       0.2, 0.2, 0.2, 1.0,
		-0.37, -0.15,       0.2, 0.2, 0.2, 1.0,

		0.03, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.03, -0.15,       0.2, 0.2, 0.2, 1.0,
		0.13, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.13, -0.15,       0.2, 0.2, 0.2, 1.0,
		0.23, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.23, -0.15,       0.2, 0.2, 0.2, 1.0,
		0.33, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.33, -0.15,       0.2, 0.2, 0.2, 1.0,

		0.38, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.38, -0.15,       0.2, 0.2, 0.2, 1.0,
		0.48, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.48, -0.15,       0.2, 0.2, 0.2, 1.0,
		0.58, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.58, -0.15,       0.2, 0.2, 0.2, 1.0,
		0.67, 0.15,       0.2, 0.2, 0.2, 1.0,
		0.67, -0.15,       0.2, 0.2, 0.2, 1.0,

		-0.32, 0.495,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.495,       0.2, 0.2, 0.2, 1.0,
		-0.32, 0.4,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.4,       0.2, 0.2, 0.2, 1.0,
		-0.32, 0.304,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.304,       0.2, 0.2, 0.2, 1.0,
		-0.32, 0.205,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.205,       0.2, 0.2, 0.2, 1.0,

		-0.32, 0.147,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.147,       0.2, 0.2, 0.2, 1.0,
		-0.32, 0.052,       0.2, 0.2, 0.2, 1.0,
		-0.02, 0.052,       0.2, 0.2, 0.2, 1.0,
		-0.32, -0.05,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.05,       0.2, 0.2, 0.2, 1.0,
		-0.32, -0.147,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.147,       0.2, 0.2, 0.2, 1.0,

		-0.32, -0.205,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.205,       0.2, 0.2, 0.2, 1.0,
		-0.32, -0.304,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.304,       0.2, 0.2, 0.2, 1.0,
		-0.32, -0.4,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.4,       0.2, 0.2, 0.2, 1.0,
		-0.32, -0.495,       0.2, 0.2, 0.2, 1.0,
		-0.02, -0.495,       0.2, 0.2, 0.2, 1.0,

		-0.67, 0.147,       0.2, 0.2, 0.2, 1.0,
		-0.37, 0.147,       0.2, 0.2, 0.2, 1.0,
		-0.67, 0.052,       0.2, 0.2, 0.2, 1.0,
		-0.37, 0.052,       0.2, 0.2, 0.2, 1.0,
		-0.67, -0.05,       0.2, 0.2, 0.2, 1.0,
		-0.37, -0.05,       0.2, 0.2, 0.2, 1.0,
		-0.67, -0.147,       0.2, 0.2, 0.2, 1.0,
		-0.37, -0.147,       0.2, 0.2, 0.2, 1.0,

		0.03, 0.147,       0.2, 0.2, 0.2, 1.0,
		0.33, 0.147,       0.2, 0.2, 0.2, 1.0,
		0.03, 0.052,       0.2, 0.2, 0.2, 1.0,
		0.33, 0.052,       0.2, 0.2, 0.2, 1.0,
		0.03, -0.05,       0.2, 0.2, 0.2, 1.0,
		0.33, -0.05,       0.2, 0.2, 0.2, 1.0,
		0.03, -0.147,      0.2, 0.2, 0.2, 1.0,
		0.33, -0.147,      0.2, 0.2, 0.2, 1.0,

		0.38, 0.147,        0.2, 0.2, 0.2, 1.0,
		0.67, 0.147,		0.2, 0.2, 0.2, 1.0,
		0.38, 0.052,		0.2, 0.2, 0.2, 1.0,
		0.67, 0.052,		0.2, 0.2, 0.2, 1.0,
		0.38, -0.05,		0.2, 0.2, 0.2, 1.0,
		0.67, -0.05,		0.2, 0.2, 0.2, 1.0,
		0.38, -0.147,		0.2, 0.2, 0.2, 1.0,
		0.67, -0.147,		0.2, 0.2, 0.2, 1.0,
	};
};

#endif
